{"version":3,"sources":["context/UserContext.js","components/auth/AuthOptions.js","components/layout/Header.js","components/todo/TodoOptions.js","components/pages/Home.js","components/misc/ErrorNotice.js","components/auth/Login.js","components/auth/Register.js","utils/todoAPI.js","components/misc/SuccessNotice.js","components/layout/UpdateForm.js","components/layout/Modal.js","components/layout/Card.js","components/todo/CreateTodos.js","components/todo/GetTodos.js","components/todo/SearchTodo.js","App.js","serviceWorker.js","index.js"],"names":["createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","token","undefined","localStorage","setItem","push","Header","id","to","displayName","TodoOptions","useState","useEffect","value","Home","ErrorNotice","props","message","clearError","Login","email","setEmail","password","setPassword","error","setError","lastVisited","getItem","submit","e","a","preventDefault","loginUser","Axios","post","loginRes","data","response","msg","onSubmit","htmlFor","type","onChange","target","Register","passwordCheck","setpasswordCheckl","setDisplayName","newUser","placeholder","axios","get","headers","delete","newTodo","title","youTubeUrl","description","updateTodo","put","search","console","log","SuccessNotice","clearSuccess","Form","todoList","_id","titleUpdate","setTitleUpdate","youTubeUrlUpdate","setYouTubeUrlUpdate","descriptionUpdate","setDescriptionUpdate","API","then","res","setTodoSuccess","catch","err","todoSuccess","defaultValue","name","Modal","showHideClassName","show","handleClose","getTodos","Card","setShow","youTubeURL","urlArray","split","charAt","length","youTubeId","style","position","paddingBottom","paddingTop","height","color","top","left","width","src","frameBorder","deleteTodos","CreateTodos","setTitle","setYouTubeUrl","setDescription","window","location","reload","GetTodos","setTodoList","map","todo","key","SearchTodos","todoSearch","setTodoSearch","App","userRes","checkLoggedIn","Provider","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9a20fcc0.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext'\n\nexport default function AuthOptions() {\n    const { userData, setUserData } = useContext(UserContext);\n\n    const history = useHistory();\n\n    const register = () => history.push('/register');\n    const login = () => history.push('/login');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '')\n        history.push('/login');\n\n    }\n\n    return (\n        <nav className='auth-options'>\n            {userData.user ? (<button onClick={logout}>Log out</button>) : (\n            <>\n                <button onClick={register}>Register</button>\n                <button onClick={login}>Log in</button>\n\n            </>\n            )}\n        </nav>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport AuthOptions from '../auth/AuthOptions';\n\nexport default function Header() {\n    const { userData } = useContext(UserContext);\n\n    return (\n        <header id='header'>\n            <Link to='/'>\n            {\n                userData.user ? <h1 className='title'>{userData.user.displayName}'s Todos!</h1> : <h1 className='title'>Simple Todos!</h1>\n            }\n            </Link>\n\n            <AuthOptions />\n\n        </header>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\n\nexport default function TodoOptions() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    return (\n        <>\n            <div className='page'>\n                <div className='container'>\n                    <h2>Todo Options</h2>\n                    <Link to='/gettodos'>\n                        <button className='type-button' value='GetTodos'>Get Todo's</button>\n                    </Link>\n                    <Link to='/searchtodos'>\n                        <button className='type-button' value='SearchTodos'>Search Todo's</button>\n                    </Link>\n\n                    <Link to='/createtodos'>\n                        <button className='type-button' value='CreateTodos'>Create Todo</button>\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}","import React, { useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport TodoOptions from '../todo/TodoOptions';\n\nfunction Home() {\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n     \n        localStorage.setItem('lastVisited', '');\n\n        if (!userData.user) {\n            history.push('/login')\n        }\n\n    });\n    return (\n        <>\n           <TodoOptions />\n        </>\n    )\n}\n\nexport default Home\n\n","import React from 'react'\n\nexport default function ErrorNotice(props) {\n    return (\n        <div className='error-notice'>\n            <span>{props.message}</span>\n            <button onClick={props.clearError}>X</button>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Login() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const lastVisited = localStorage.getItem('lastVisited')\n        if (userData.user) {\n            history.push(lastVisited)\n        }\n    });\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const loginUser = { email, password };\n            const loginRes = await Axios.post(\n                '/api/users/login',\n                loginUser\n            );\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            (err.response.data.msg && setError(err.response.data.msg))\n        }\n\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Login</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='login-email'>Email</label>\n                    <input\n                        id='login-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='login-password'>Password</label>\n                    <input\n                        id='login-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n\n                    <input type='submit' value='Log in' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Register() {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setpasswordCheckl] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newUser = { email, password, passwordCheck, displayName };\n            await Axios.post(\n                '/api/users/register',\n                newUser\n            );\n            const loginRes = await Axios.post('/api/users/login', {\n                email,\n                password\n            });\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Register</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='register-email'>Email</label>\n                    <input\n                        id='register-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='register-password'>Password</label>\n                    <input\n                        id='register-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <input\n                        type='password'\n                        placeholder='Verify password'\n                        onChange={e => setpasswordCheckl(e.target.value)}\n                    />\n\n                    <label htmlFor='register-display-name'>Display name</label>\n                    <input\n                        id='register-display-name'\n                        type='text'\n                        onChange={e => setDisplayName(e.target.value)}\n                    />\n\n                    <input type='submit' value='Register' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","// import { useContext } from 'react';\nimport axios from 'axios';\n// import UserContext from '../../context/UserContext';\n\n// const { userData } = \n\nexport default {\n    getTodos: function (token) {\n        return axios.get('api/todos/all', {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    deleteTodos: function (token, id) {\n        return axios.delete('/api/todos/' + id, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    createTodos: function (newTodo, token) {\n        const { title, youTubeUrl, description } = newTodo;\n        return axios.post('/api/todos/', { title, youTubeUrl, description }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    updateTodo: function (updateTodo, token, id) {\n\n        // console.log('todo api', id)\n        const { title, youTubeUrl, description } = updateTodo;\n\n        return axios.put('/api/todos/' + id, { title, youTubeUrl, description }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    searchTodos: function (search, token) {\n        console.log(typeof search)\n        return axios.post('/api/todos/search', { search }, {\n            headers: {\n                'x-auth-token' : token\n            }\n        })\n    }\n}\n\n","import React from 'react'\n\nexport default function SuccessNotice(props) {\n    return (\n        <div>\n            <div className='success-notice'>\n                <span>{props.message}</span>\n                <button onClick={props.clearSuccess}>X</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n\nexport default function Form(props) {\n\n    const { _id, title, youTubeUrl, description } = props.props.todoList;\n\n    const [titleUpdate, setTitleUpdate] = useState();\n    const [youTubeUrlUpdate, setYouTubeUrlUpdate] = useState();\n    const [descriptionUpdate, setDescriptionUpdate] = useState();\n    const [error, setError] = useState();\n\n    const { userData } = useContext(UserContext);\n\n\n    // useEffect(() => {\n    //     setTitleUpdate(title);\n\n    // })\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const updateTodo = {\n                title: !titleUpdate ? description : titleUpdate,\n                youTubeUrl: !youTubeUrlUpdate ? youTubeUrl : youTubeUrlUpdate,\n                description: !descriptionUpdate ? description : descriptionUpdate\n            }\n\n            await API.updateTodo(updateTodo, userData.token, _id)\n                .then(res => props.setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <>\n            <div className='container'>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {props.todoSuccess && (\n                    <SuccessNotice message={props.todoSuccess} clearSuccess={() => {\n                        props.setTodoSuccess(undefined);\n                    }\n                    } />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        defaultValue={title}\n                        onChange={e => setTitleUpdate(e.target.value)}\n                    ></input>\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        defaultValue={youTubeUrl}\n                        onChange={e => setYouTubeUrlUpdate(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        defaultValue={description}\n                        onChange={e => setDescriptionUpdate(e.target.value)}\n\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport UpdateForm from './UpdateForm'\n\nexport default function Modal(props) {\n\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <>\n            <div id=\"myModal\" className={showHideClassName}>\n                <div className=\"modal-main\">\n                    <UpdateForm\n                        props={props}\n                        todoSuccess={todoSuccess}\n                        setTodoSuccess={setTodoSuccess}\n                    />\n                    <button className=\"close\" onClick={() => { props.handleClose(); props.getTodos(); setTodoSuccess(undefined) }}>close</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport Modal from '../layout/Modal';\n\nexport default function Card(props) {\n\n    const [toggle, setToggle] = useState(false);\n    const [show, setShow] = useState(false)\n\n    const showModal = () => {\n        setShow(true)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    const youTubeURL = props.todoList.youTubeUrl;\n    const urlArray = (youTubeURL.split(youTubeURL.charAt(youTubeURL.length - 12)))\n    const youTubeId = urlArray[urlArray.length-1];\n\n    return (\n        <>\n            {/* {toggle && <Modal />} */}\n\n            <div className='card-body'>\n                <h3 className='card-title'>{props.todoList.title}</h3>\n                <p className='card-description'>{props.todoList.description}</p>\n                <div\n                    className=\"video\"\n                    style={{\n                        position: \"relative\",\n                        paddingBottom: \"56.25%\" /* 16:9 */,\n                        paddingTop: 25,\n                        height: 0,\n                        color: 'red'\n\n                    }}\n                >\n                    <iframe\n                        style={{\n                            position: \"absolute\",\n                            top: 0,\n                            left: 0,\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                        src={`https://www.youtube.com/embed/${youTubeId}`}\n                        frameBorder=\"0\"\n                    />\n                </div>\n\n\n                <div className='buttons-div'>\n                    <Modal\n                        show={show}\n                        handleClose={hideModal}\n                        todoList={props.todoList}\n                        getTodos={props.getTodos}\n                    >\n                    </Modal>\n\n                    <button className='todo-card-button' onClick={showModal}>Edit</button>\n                    <button className='todo-card-button' onClick={() => props.deleteTodos(props.todoList._id)}>Delete</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n// import SuccessContext from '../../context/SuccessContext';\nimport Form from '../layout/UpdateForm';\nimport Card from '../../components/layout/Card';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState('');\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'createtodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    }, []);\n\n    const setIntialStates = () => {\n        // Send initial state as prop to error and success\n        setTodoSuccess(undefined);\n        setError(undefined)\n        setTitle('');\n        setYouTubeUrl('');\n        setDescription('');\n\n        console.log(todoSuccess, error, title, youTubeUrl, description)\n    }\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description }\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                // .then API.get\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"Something when wrong\")\n        }\n        // setIntialStates();\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                        // setTitle('');\n                    }\n                    } />\n                )}\n\n                {/* <Form\n                    onSubmit={submit.bind()}\n                    // setTitle={() => setTitle}\n                    // setYouTubeUrl={setYouTubeUrl}\n                    // setDescription={setDescription}\n\n                /> */}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit'/>\n                        <input type='reset' value='Clear' onClick={() => { setIntialStates();  window.location.reload(false); }}/>\n                    </div>\n                </form>\n                <button className='type-button' onClick={() => { history.push('/'); setTodoSuccess(undefined);}} value='Home'>Home</button>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport API from '../../utils/todoAPI';\nimport Axios from 'axios';\nimport UserContext from '../../context/UserContext';\nimport Card from '../layout/Card'\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function GetTodos() {\n    const { userData } = useContext(UserContext);\n    const [todoList, setTodoList] = useState([]);\n    const [error, setError] = useState();\n    // const [toggle, setToggle] = useEffect('');\n\n\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'gettodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    useEffect(() => {\n        API.getTodos(userData.token)\n            .then(res => {\n                setTodoList(res.data)\n            })\n            .catch(err =>\n                (err.response.data.msg && setError(err.response.data.msg) && console.log(err))\n            )\n    }, [])\n\n    const getTodos = async () => {\n        try {\n            await API.getTodos(userData.token)\n                .then(res =>\n                    setTodoList(res.data)\n                )\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n                        })\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Get Todo's</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            id={todo._id}\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                            getTodos={getTodos}\n                        />\n\n                    ) : <p></p>}\n                </div>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport API from '../../utils/todoAPI';\nimport Card from '../layout/Card';\n\nexport default function SearchTodos() {\n    const [error, setError] = useState(undefined);\n    const [todoList, setTodoList] = useState([]);\n    const [todoSearch, setTodoSearch] = useState({\n        search: undefined\n    });\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'searchtodos')\n\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        console.log(todoSearch.search)\n        try {\n            e.preventDefault();\n            setError(undefined)\n\n            await API.searchTodos(todoSearch.search, userData.token)\n                .then(res => {\n                    if (res.data.length === 0) {\n                        (setError('No matches!  Do you need more to-do...?'))\n                    } else {\n\n                        setTodoList(res.data)\n                    }\n                })\n        } catch (err) {\n            console.log(err)\n            err.response.data.msg && setError('No matches!  Do you need more to-do...?');\n        }\n    }\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n\n                            (err.response.data.msg && setError(err.response.data.msg))\n\n                        })\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const getTodos = async () => {\n        try {\n            await API.getTodos(userData.token)\n                .then(res => {\n                    setTodoList(res.data)\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n\n        <div className='page'>\n            <div className='container'>\n\n                <h2>Search Todos</h2>\n\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='search-term'>Search:</label>\n                    <input\n                        id='todo-search'\n                        type='text'\n                        placeholder='Search your todos'\n                        onChange={e => setTodoSearch({ search: e.target.value })}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear'\n                        // onClick={() => { setIntialStates();  window.location.reload(false); }}\n                        />\n                    </div>\n                </form>\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            id={todo._id}\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                            getTodos={getTodos}\n                        />\n\n                    ) :\n                        <p></p>\n\n                    }\n                </div>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n// import SuccessContext from './context/SuccessContext';\nimport Axios from 'axios';\n\nimport Header from './components/layout/Header'\nimport Home from './components/pages/Home.js';\nimport Login from './components/auth/Login.js';\nimport Register from './components/auth/Register.js';\nimport CreateTodos from './components/todo/CreateTodos';\nimport GetTodos from './components/todo/GetTodos';\nimport SearchTodos from './components/todo/SearchTodo';\n\nimport './App.css';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  })\n\n  // const [todoSuccess, setTodoSuccess ] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '');\n        token = '';\n        return;\n      }\n\n      const tokenRes = await Axios.post(\n        '/api/users/tokenIsValid',\n        null,\n        { headers: { 'x-auth-token': token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get('/api/users/', {\n          headers: { 'x-auth-token': token }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        })\n      }\n    };\n    checkLoggedIn();\n  }, [])\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          {/* <SuccessContext.Provider value={{ todoSuccess, setTodoSuccess }}> */}\n            <Header />\n            {/* <div className='page'> */}\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/login' component={Login} />\n              <Route path='/register' component={Register} />\n              <Route path='/createtodos' component={CreateTodos} />\n              <Route path='/gettodos' component={GetTodos} />\n              <Route path='/searchtodos' component={SearchTodos} />\n            </Switch>\n            {/* </div> */}\n          {/* </SuccessContext.Provider> */}\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}