{"version":3,"sources":["context/UserContext.js","components/auth/AuthOptions.js","components/layout/Header.js","components/todo/OptionButton.js","components/todo/TodoOptions.js","utils/hereAPI.js","components/pages/Home.js","components/misc/ErrorNotice.js","components/auth/Login.js","components/auth/Register.js","utils/todoAPI.js","components/misc/SuccessNotice.js","components/todo/CreateTodos.js","components/layout/UpdateForm.js","components/layout/Modal.js","components/layout/Card.js","components/todo/GetTodos.js","components/todo/SearchTodo.js","App.js","serviceWorker.js","index.js"],"names":["createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","token","undefined","localStorage","setItem","push","Header","id","to","displayName","OptionButton","value","name","TodoOptions","useState","useEffect","req","res","a","axios","get","console","log","process","data","Home","ErrorNotice","message","clearError","Login","email","setEmail","password","setPassword","error","setError","lastVisited","getItem","submit","e","preventDefault","loginUser","Axios","post","loginRes","response","msg","onSubmit","htmlFor","type","onChange","target","Register","passwordCheck","setpasswordCheckl","setDisplayName","newUser","placeholder","headers","delete","newTodo","title","youTubeUrl","description","category","updateTodo","put","search","SuccessNotice","clearSuccess","CreateTodos","setTitle","setYouTubeUrl","setDescription","setCategory","todoSuccess","setTodoSuccess","API","then","catch","err","Form","todoList","_id","titleUpdate","setTitleUpdate","youTubeUrlUpdate","setYouTubeUrlUpdate","descriptionUpdate","setDescriptionUpdate","categoryUpdate","setCategoryUpdate","defaultValue","Modal","handleClose","getTodos","show","showHideClassName","Card","deleteTodos","setShow","urlArray","split","charAt","length","youTubeId","style","position","paddingBottom","paddingTop","height","color","top","left","width","src","frameBorder","GetTodos","setTodoList","map","todo","key","SearchTodos","todoSearch","setTodoSearch","App","userRes","checkLoggedIn","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fae0c430.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext'\n\nexport default function AuthOptions() {\n    const { userData, setUserData } = useContext(UserContext);\n\n    const history = useHistory();\n\n    const register = () => history.push('/register');\n    const login = () => history.push('/login');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '')\n        history.push('/login');\n\n    }\n\n    return (\n        <nav className='auth-options'>\n            {userData.user ? (<button onClick={logout}>Log out</button>) : (\n            <>\n                <button onClick={register}>Register</button>\n                <button onClick={login}>Log in</button>\n\n            </>\n            )}\n        </nav>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport AuthOptions from '../auth/AuthOptions';\n\nexport default function Header() {\n    const { userData: { user } } = useContext(UserContext);\n\n    return (\n        <header id='header'>\n            <Link to='/'>\n                {\n                    user ? <h1 className='title'>{user.displayName}'s Todos!</h1> : <h1 className='title'>Simple Todos!</h1>\n                }\n            </Link>\n\n            <AuthOptions />\n\n        </header>\n    )\n}\n","import React from 'react'\n\nexport default function OptionButton({ className, value, name, onClick }) {\n    return (\n        <button className={className} value={value} onClick={onClick}>{name}</button>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\n\nimport OptionButton from './OptionButton';\n\nexport default function TodoOptions() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    return (\n        <>\n            <div className='page'>\n                <div className='container'>\n                    <h2>Home</h2>\n                    <Link to='/gettodos'>\n                        <OptionButton className='type-button' value='GetTodos' name='Get Todos' />\n                    </Link>\n                    <Link to='/searchtodos'>\n                        <OptionButton className='type-button' value='SearchTodos' name='Search' />\n                    </Link>\n                    <Link to='/createtodos'>\n                        <OptionButton className='type-button' value='CreateTodos' name='Create Todo' />\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}","import axios from 'axios';\n\nexport default {\n    searchYoutube: async (req, res) => {\n        try {\n            res = await axios.get('https://www.googleapis.com/youtube/v3/theburgershow');\n            return res;\n        } catch (err) {\n            console.log(\"yuuuup - its an error\", err)\n\n        }\n    },\n\n    hereSearch: async (req, res) => {\n        try {\n            res = await axios.get(`https://discover.search.hereapi.com/v1/discover?at=52.5228,13.4124&q=food&apiKey=${process.env.REACT_APP_HERE_API_KEY}`)\n            return res.data;\n\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n}","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport TodoOptions from '../todo/TodoOptions';\nimport hereAPI from '../../utils/hereAPI';\n\nfunction Home() {\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    // const getSearch = async () => {\n    //     let hereSearch = await hereAPI.hereSearch()\n    //     console.log(hereSearch)\n    // }\n\n    // useEffect(() => {\n    //     getSearch();\n    // })\n\n    useEffect(() => {\n\n        localStorage.setItem('lastVisited', '');\n\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    return (\n        <>\n            <TodoOptions />\n        </>\n    )\n}\n\nexport default Home\n\n","import React from 'react'\n\nexport default function ErrorNotice({ message, clearError }) {\n    return (\n        <div className='error-notice'>\n            <span>{message}</span>\n            <button onClick={clearError}>X</button>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Login() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const lastVisited = localStorage.getItem('lastVisited')\n        if (userData.user) {\n            history.push(lastVisited)\n        }\n    });\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const loginUser = { email, password };\n            const loginRes = await Axios.post(\n                '/api/users/login',\n                loginUser\n            );\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            (err.response.data.msg && setError(err.response.data.msg))\n        }\n\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Login</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='login-email'>Email</label>\n                    <input\n                        id='login-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='login-password'>Password</label>\n                    <input\n                        id='login-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n\n                    <input type='submit' value='Log in' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Register() {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setpasswordCheckl] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newUser = { email, password, passwordCheck, displayName };\n            await Axios.post(\n                '/api/users/register',\n                newUser\n            );\n            const loginRes = await Axios.post('/api/users/login', {\n                email,\n                password\n            });\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Register</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='register-email'>Email</label>\n                    <input\n                        id='register-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='register-password'>Password</label>\n                    <input\n                        id='register-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <input\n                        type='password'\n                        placeholder='Verify password'\n                        onChange={e => setpasswordCheckl(e.target.value)}\n                    />\n\n                    <label htmlFor='register-display-name'>Display name</label>\n                    <input\n                        id='register-display-name'\n                        type='text'\n                        onChange={e => setDisplayName(e.target.value)}\n                    />\n\n                    <input type='submit' value='Register' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","// import { useContext } from 'react';\nimport axios from 'axios';\n// import UserContext from '../../context/UserContext';\n\n// const { userData } = \n\nexport default {\n    getTodos: function (token) {\n        return axios.get('api/todos/all', {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    deleteTodos: function (token, id) {\n        return axios.delete('/api/todos/' + id, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    createTodos: function (newTodo, token) {\n        const { title, youTubeUrl, description, category } = newTodo;\n        return axios.post('/api/todos/', { title, youTubeUrl, description, category }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    updateTodo: function (updateTodo, token, id) {\n\n        // console.log('todo api', id)\n        const { title, youTubeUrl, description, category } = updateTodo;\n\n        return axios.put('/api/todos/' + id, { title, youTubeUrl, description, category }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    searchTodos: function (search, token) {\n        return axios.post('/api/todos/search', { search }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    searchYoutube: function (search, token) {\n        ('intodoapi search youtube')\n        return axios.post('/api/todos/searchyoutube', { search }), {\n            headers: {\n                'x-auth-token': token\n            }\n        }\n    }\n}\n\n","import React from 'react'\n\nexport default function SuccessNotice({ message, clearSuccess }) {\n    return (\n        <div>\n            <div className='success-notice'>\n                <span>{message}</span>\n                <button onClick={clearSuccess}>X</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport Dropdown from '../layout/Dropdown';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\nimport OptionButton from './OptionButton';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState('');\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n    const [category, setCategory] = useState();\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'createtodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    }, []);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description, category }\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => {\n                    setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`)\n                    history.push('/gettodos')\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"Something when wrong\")\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                        // setTitle('');\n                    }\n                    } />\n                )}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='categoryDropdown' >Category</label>\n                    <select id='categoryDropdown' onChange={e => setCategory(e.target.value)}>\n                        <option value='category'>Select Category</option>\n                        <option value=\"Purchase\">Purchase</option>\n                        <option value=\"Repair\">Repair</option>\n                        <option value=\"Order\">Order</option>\n                        <option value=\"Clean\">Clean</option>\n                        <option value=\"Make\">Make</option>\n                        <option value=\"Exercise\">Exercise</option>\n                        <option value=\"Work\">Work</option>\n                    </select>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL (e.g. https://www.youtube.com/watch?v=PkZNo7MFNFg)</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n                <OptionButton className='type-button' value='Home' name='Home' onClick={() => { history.push('/'); setTodoSuccess(undefined); }}></OptionButton>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n\nexport default function Form({ todoList, setTodoSuccess, todoSuccess }) {\n\n    const { _id, title, youTubeUrl, description, category } = todoList;\n\n    const [titleUpdate, setTitleUpdate] = useState();\n    const [youTubeUrlUpdate, setYouTubeUrlUpdate] = useState();\n    const [descriptionUpdate, setDescriptionUpdate] = useState();\n    const [categoryUpdate, setCategoryUpdate] = useState();\n    const [error, setError] = useState();\n\n    const { userData, userData: { user }, userData: { user: { displayName } }\n    } = useContext(UserContext);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const updateTodo = {\n                title: !titleUpdate ? title : titleUpdate,\n                youTubeUrl: !youTubeUrlUpdate ? youTubeUrl : youTubeUrlUpdate,\n                description: !descriptionUpdate ? description : descriptionUpdate,\n                category: !categoryUpdate ? category : categoryUpdate,\n            }\n\n            await API.updateTodo(updateTodo, userData.token, _id)\n                .then(res => setTodoSuccess(`Success, ${displayName}!  Your Todo has been saved.`))\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <>\n            <div className='container'>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                    }\n                    } />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label className=\"category\" htmlFor=\"category\">Category</label>\n                    <select name=\"category\" defaultValue={category} onChange={e => setCategoryUpdate(e.target.value)}>\n                        <option value='category'>Select Category</option>\n                        <option value=\"Purchase\">Purchase</option>\n                        <option value=\"Repair\">Repair</option>\n                        <option value=\"Order\">Order</option>\n                        <option value=\"Clean\">Clean</option>\n                        <option value=\"Make\">Make</option>\n                        <option value=\"Exercise\">Exercise</option>\n                        <option value=\"Work\">Work</option>\n                    </select>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        defaultValue={title}\n                        onChange={e => setTitleUpdate(e.target.value)}\n                    ></input>\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        defaultValue={youTubeUrl}\n                        onChange={e => setYouTubeUrlUpdate(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        defaultValue={description}\n                        onChange={e => setDescriptionUpdate(e.target.value)}\n\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport UpdateForm from './UpdateForm'\n\nexport default function Modal({ todoList, handleClose, getTodos, show }) {\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <>\n            <div id=\"myModal\" className={showHideClassName}>\n                <div className=\"modal-main\">\n                    <UpdateForm\n                        todoList={todoList}\n                        todoSuccess={todoSuccess}\n                        setTodoSuccess={setTodoSuccess}\n                    />\n                    <button className=\"close\" onClick={() => { handleClose(); getTodos(); setTodoSuccess(undefined) }}>close</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport Modal from './Modal';\nimport UpdateForm from './UpdateForm'\n\nexport default function Card({ deleteTodos, getTodos, todoList, todoList: { title, youTubeUrl, description } }) {\n    const [toggle, setToggle] = useState(false);\n    const [show, setShow] = useState(false);\n\n\n    const showModal = () => {\n        setShow(true)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    const urlArray = (youTubeUrl.split(youTubeUrl.charAt(youTubeUrl.length - 12)))\n    const youTubeId = urlArray[urlArray.length - 1];\n\n    return (\n        <>\n            <div className='card-body'>\n                <h3 className='card-title'>{title}</h3>\n                <p className='card-description'>{description}</p>\n                <div\n                    className=\"video\"\n                    style={{\n                        position: \"relative\",\n                        paddingBottom: \"56.25%\" /* 16:9 */,\n                        paddingTop: 25,\n                        height: 0,\n                        color: 'red'\n\n                    }}\n                >\n                    <iframe\n                        style={{\n                            position: \"absolute\",\n                            top: 0,\n                            left: 0,\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                        src={`https://www.youtube.com/embed/${youTubeId}`}\n                        frameBorder=\"0\"\n                    />\n                </div>\n\n\n                <div className='buttons-div'>\n                    <Modal\n                        show={show}\n                        handleClose={hideModal}\n                        todoList={todoList}\n                        getTodos={getTodos}\n                    >\n\n                    </Modal>\n\n                    <button className='todo-card-button' onClick={showModal}>Edit</button>\n                    <button className='todo-card-button' onClick={() => deleteTodos(todoList._id)}>Delete</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport API from '../../utils/todoAPI';\nimport UserContext from '../../context/UserContext';\nimport Card from '../layout/Card'\nimport ErrorNotice from '../misc/ErrorNotice';\nimport OptionButton from './OptionButton';\n\nexport default function GetTodos() {\n    const { userData } = useContext(UserContext);\n    const [todoList, setTodoList] = useState([]);\n    const [error, setError] = useState();\n\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'gettodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    useEffect(() => {\n        API.getTodos(userData.token)\n            .then(res => {\n                setTodoList(res.data)\n            })\n            .catch(err =>\n                (err.response.data.msg && setError(err.response.data.msg) && console.log(err))\n            )\n    }, [])\n\n    const getTodos = async () => {\n        try {\n            await API.getTodos(userData.token)\n                .then(res => {\n                    setTodoList(res.data)\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n                        })\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Get Todo's</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            id={todo._id}\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                            getTodos={getTodos}\n                        />\n\n                    ) : <p></p>}\n                </div>\n                <Link to='/'>\n                    <OptionButton className='type-button' value='Home' name='Home' />\n                </Link>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport API from '../../utils/todoAPI';\nimport Card from '../layout/Card';\nimport OptionButton from './OptionButton';\n\nexport default function SearchTodos() {\n    const [error, setError] = useState(undefined);\n    const [todoList, setTodoList] = useState([]);\n    const [todoSearch, setTodoSearch] = useState({\n        search: undefined\n    });\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'searchtodos')\n\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        console.log(todoSearch.search)\n        try {\n            e.preventDefault();\n            setError(undefined)\n\n            await API.searchTodos(todoSearch.search, userData.token)\n                .then(res => {\n                    if (res.data.length === 0) {\n                        (setError('No matches!  Do you need more to-do...?'))\n                    } else {\n\n                        setTodoList(res.data)\n                    }\n                })\n        } catch (err) {\n            console.log(err)\n            err.response.data.msg && setError('No matches!  Do you need more to-do...?');\n        }\n    }\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n\n                            (err.response.data.msg && setError(err.response.data.msg))\n\n                        })\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const getTodos = async () => {\n        try {\n            await API.getTodos(userData.token)\n                .then(res => {\n                    setTodoList(res.data)\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n\n        <div className='page'>\n            <div className='container'>\n\n                <h2>Search Todos</h2>\n\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='search-term'>Search:</label>\n                    <input\n                        id='todo-search'\n                        type='text'\n                        placeholder='Search your todos'\n                        onChange={e => setTodoSearch({ search: e.target.value })}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear'\n                        // onClick={() => { setIntialStates();  window.location.reload(false); }}\n                        />\n                    </div>\n                </form>\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            id={todo._id}\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                            getTodos={getTodos}\n                        />\n\n                    ) :\n                        <p></p>\n\n                    }\n                </div>\n                <Link to='/'>\n                    <OptionButton className='type-button' value='Home' name='Home' />\n                </Link>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n// import SuccessContext from './context/SuccessContext';\nimport Axios from 'axios';\n\nimport Header from './components/layout/Header'\nimport Home from './components/pages/Home.js';\nimport Login from './components/auth/Login.js';\nimport Register from './components/auth/Register.js';\nimport CreateTodos from './components/todo/CreateTodos';\nimport GetTodos from './components/todo/GetTodos';\nimport SearchTodos from './components/todo/SearchTodo';\n\nimport './App.css';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  })\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '');\n        token = '';\n        return;\n      }\n\n      const tokenRes = await Axios.post(\n        '/api/users/tokenIsValid',\n        null,\n        { headers: { 'x-auth-token': token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get('/api/users/', {\n          headers: { 'x-auth-token': token }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        })\n      }\n    };\n    checkLoggedIn();\n  }, [])\n\n  // useEffect for welcome modal\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Header />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/login' component={Login} />\n            <Route path='/register' component={Register} />\n            <Route path='/createtodos' component={CreateTodos} />\n            <Route path='/gettodos' component={GetTodos} />\n            <Route path='/searchtodos' component={SearchTodos} />\n          </Switch>\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}