{"version":3,"sources":["context/UserContext.js","components/auth/AuthOptions.js","components/layout/Header.js","utils/todoAPI.js","components/todo/TodoOptions.js","components/pages/Home.js","components/misc/ErrorNotice.js","components/auth/Login.js","components/auth/Register.js","components/misc/SuccessNotice.js","components/layout/UpdateForm.js","components/layout/Modal.js","components/layout/Card.js","components/todo/CreateTodos.js","components/todo/GetTodos.js","components/todo/SearchTodo.js","App.js","serviceWorker.js","index.js"],"names":["createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","token","undefined","localStorage","setItem","push","Header","id","to","displayName","axios","get","headers","delete","newTodo","title","youTubeUrl","description","post","updateTodo","put","search","TodoOptions","useState","useEffect","value","Home","ErrorNotice","props","message","clearError","Login","email","setEmail","password","setPassword","error","setError","lastVisited","getItem","submit","e","a","preventDefault","loginUser","Axios","loginRes","data","response","msg","onSubmit","htmlFor","type","onChange","target","Register","passwordCheck","setpasswordCheckl","setDisplayName","newUser","placeholder","SuccessNotice","clearSuccess","Form","todoList","_id","titleUpdate","setTitleUpdate","youTubeUrlUpdate","setYouTubeUrlUpdate","descriptionUpdate","setDescriptionUpdate","API","then","res","setTodoSuccess","catch","err","console","log","todoSuccess","defaultValue","name","Modal","showHideClassName","show","handleClose","getTodos","Card","setShow","youTubeURL","urlArray","split","charAt","length","youTubeId","style","position","paddingBottom","paddingTop","height","color","top","left","width","src","frameBorder","deleteTodos","CreateTodos","setTitle","setYouTubeUrl","setDescription","window","location","reload","GetTodos","setTodoList","map","todo","key","SearchTodos","todoSearch","setTodoSearch","App","userRes","checkLoggedIn","Provider","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f3907bc.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext'\n\nexport default function AuthOptions() {\n    const { userData, setUserData } = useContext(UserContext);\n\n    const history = useHistory();\n\n    const register = () => history.push('/register');\n    const login = () => history.push('/login');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '')\n        history.push('/login');\n\n    }\n\n    return (\n        <nav className='auth-options'>\n            {userData.user ? (<button onClick={logout}>Log out</button>) : (\n            <>\n                <button onClick={register}>Register</button>\n                <button onClick={login}>Log in</button>\n\n            </>\n            )}\n        </nav>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport AuthOptions from '../auth/AuthOptions';\n\nexport default function Header() {\n    const { userData } = useContext(UserContext);\n\n    return (\n        <header id='header'>\n            <Link to='/'>\n            {\n                userData.user ? <h1 className='title'>{userData.user.displayName}'s Todos!</h1> : <h1 className='title'>Simple Todos!</h1>\n            }\n            </Link>\n\n            <AuthOptions />\n\n        </header>\n    )\n}\n","// import { useContext } from 'react';\nimport axios from 'axios';\n// import UserContext from '../../context/UserContext';\n\n// const { userData } = \n\nexport default {\n    getTodos: function (token) {\n        return axios.get('api/todos/all', {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    deleteTodos: function (token, id) {\n        return axios.delete('/api/todos/' + id, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    createTodos: function (newTodo, token) {\n        const { title, youTubeUrl, description } = newTodo;\n        return axios.post('/api/todos/', { title, youTubeUrl, description }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    updateTodo: function (updateTodo, token, id) {\n\n        // console.log('todo api', id)\n        const { title, youTubeUrl, description } = updateTodo;\n\n        return axios.put('/api/todos/' + id, { title, youTubeUrl, description }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    searchTodos: function (search, token) {\n        return axios.post('/api/todos/search', { search }, {\n            headers: {\n                'x-auth-token' : token\n            }\n        })\n    },\n    searchYoutube: function (search, token){\n        ('intodoapi search youtube')\n        return axios.post('/api/todos/searchyoutube', { search }), {\n            headers: {\n                'x-auth-token' : token\n            }\n        }\n    }\n}\n\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\n\nexport default function TodoOptions() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    return (\n        <>\n            <div className='page'>\n                <div className='container'>\n                    <h2>Todo Options</h2>\n                    <Link to='/gettodos'>\n                        <button className='type-button' value='GetTodos'>Get Todo's</button>\n                    </Link>\n                    <Link to='/searchtodos'>\n                        <button className='type-button' value='SearchTodos'>Search Todo's</button>\n                    </Link>\n\n                    <Link to='/createtodos'>\n                        <button className='type-button' value='CreateTodos'>Create Todo</button>\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport { useHistory } from 'react-router-dom';\nimport TodoOptions from '../todo/TodoOptions';\n\nfunction Home() {\n    const { userData } = useContext(UserContext);\n    const [error, setError] = useState();\n    const history = useHistory();\n\n    useEffect(() => {\n     \n        localStorage.setItem('lastVisited', '');\n\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    return (\n        <>\n           <TodoOptions />\n        </>\n    )\n}\n\nexport default Home\n\n","import React from 'react'\n\nexport default function ErrorNotice(props) {\n    return (\n        <div className='error-notice'>\n            <span>{props.message}</span>\n            <button onClick={props.clearError}>X</button>\n        </div>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Login() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const lastVisited = localStorage.getItem('lastVisited')\n        if (userData.user) {\n            history.push(lastVisited)\n        }\n    });\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const loginUser = { email, password };\n            const loginRes = await Axios.post(\n                '/api/users/login',\n                loginUser\n            );\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            (err.response.data.msg && setError(err.response.data.msg))\n        }\n\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Login</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='login-email'>Email</label>\n                    <input\n                        id='login-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='login-password'>Password</label>\n                    <input\n                        id='login-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n\n                    <input type='submit' value='Log in' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Register() {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setpasswordCheckl] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newUser = { email, password, passwordCheck, displayName };\n            await Axios.post(\n                '/api/users/register',\n                newUser\n            );\n            const loginRes = await Axios.post('/api/users/login', {\n                email,\n                password\n            });\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Register</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='register-email'>Email</label>\n                    <input\n                        id='register-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='register-password'>Password</label>\n                    <input\n                        id='register-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <input\n                        type='password'\n                        placeholder='Verify password'\n                        onChange={e => setpasswordCheckl(e.target.value)}\n                    />\n\n                    <label htmlFor='register-display-name'>Display name</label>\n                    <input\n                        id='register-display-name'\n                        type='text'\n                        onChange={e => setDisplayName(e.target.value)}\n                    />\n\n                    <input type='submit' value='Register' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function SuccessNotice(props) {\n    return (\n        <div>\n            <div className='success-notice'>\n                <span>{props.message}</span>\n                <button onClick={props.clearSuccess}>X</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n\nexport default function Form(props) {\n\n    const { _id, title, youTubeUrl, description } = props.props.todoList;\n\n    const [titleUpdate, setTitleUpdate] = useState();\n    const [youTubeUrlUpdate, setYouTubeUrlUpdate] = useState();\n    const [descriptionUpdate, setDescriptionUpdate] = useState();\n    const [error, setError] = useState();\n\n    const { userData } = useContext(UserContext);\n\n\n    // useEffect(() => {\n    //     setTitleUpdate(title);\n\n    // })\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n\n            const updateTodo = {\n                title: !titleUpdate ? description : titleUpdate,\n                youTubeUrl: !youTubeUrlUpdate ? youTubeUrl : youTubeUrlUpdate,\n                description: !descriptionUpdate ? description : descriptionUpdate\n            }\n\n            await API.updateTodo(updateTodo, userData.token, _id)\n                .then(res => props.setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <>\n            <div className='container'>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {props.todoSuccess && (\n                    <SuccessNotice message={props.todoSuccess} clearSuccess={() => {\n                        props.setTodoSuccess(undefined);\n                    }\n                    } />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        defaultValue={title}\n                        onChange={e => setTitleUpdate(e.target.value)}\n                    ></input>\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        defaultValue={youTubeUrl}\n                        onChange={e => setYouTubeUrlUpdate(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        defaultValue={description}\n                        onChange={e => setDescriptionUpdate(e.target.value)}\n\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' />\n                    </div>\n                </form>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react'\nimport UpdateForm from './UpdateForm'\n\nexport default function Modal(props) {\n\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <>\n            <div id=\"myModal\" className={showHideClassName}>\n                <div className=\"modal-main\">\n                    <UpdateForm\n                        props={props}\n                        todoSuccess={todoSuccess}\n                        setTodoSuccess={setTodoSuccess}\n                    />\n                    <button className=\"close\" onClick={() => { props.handleClose(); props.getTodos(); setTodoSuccess(undefined) }}>close</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport Modal from '../layout/Modal';\n\nexport default function Card(props) {\n\n    const [toggle, setToggle] = useState(false);\n    const [show, setShow] = useState(false)\n\n    const showModal = () => {\n        setShow(true)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    const youTubeURL = props.todoList.youTubeUrl;\n    const urlArray = (youTubeURL.split(youTubeURL.charAt(youTubeURL.length - 12)))\n    const youTubeId = urlArray[urlArray.length-1];\n\n    return (\n        <>\n            {/* {toggle && <Modal />} */}\n\n            <div className='card-body'>\n                <h3 className='card-title'>{props.todoList.title}</h3>\n                <p className='card-description'>{props.todoList.description}</p>\n                <div\n                    className=\"video\"\n                    style={{\n                        position: \"relative\",\n                        paddingBottom: \"56.25%\" /* 16:9 */,\n                        paddingTop: 25,\n                        height: 0,\n                        color: 'red'\n\n                    }}\n                >\n                    <iframe\n                        style={{\n                            position: \"absolute\",\n                            top: 0,\n                            left: 0,\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                        src={`https://www.youtube.com/embed/${youTubeId}`}\n                        frameBorder=\"0\"\n                    />\n                </div>\n\n\n                <div className='buttons-div'>\n                    <Modal\n                        show={show}\n                        handleClose={hideModal}\n                        todoList={props.todoList}\n                        getTodos={props.getTodos}\n                    >\n                    </Modal>\n\n                    <button className='todo-card-button' onClick={showModal}>Edit</button>\n                    <button className='todo-card-button' onClick={() => props.deleteTodos(props.todoList._id)}>Delete</button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\n// import SuccessContext from '../../context/SuccessContext';\nimport Form from '../layout/UpdateForm';\nimport Card from '../../components/layout/Card';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState('');\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'createtodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    }, []);\n\n    const setIntialStates = () => {\n        // Send initial state as prop to error and success\n        setTodoSuccess(undefined);\n        setError(undefined)\n        setTitle('');\n        setYouTubeUrl('');\n        setDescription('');\n\n        console.log(todoSuccess, error, title, youTubeUrl, description)\n    }\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description }\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => {\n                    setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`)\n                    history.push('/gettodos')\n                })\n\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"Something when wrong\")\n        }\n        // setIntialStates();\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                        // setTitle('');\n                    }\n                    } />\n                )}\n\n                {/* <Form\n                    onSubmit={submit.bind()}\n                    // setTitle={() => setTitle}\n                    // setYouTubeUrl={setYouTubeUrl}\n                    // setDescription={setDescription}\n\n                /> */}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube URL (e.g. https://www.youtube.com/watch?v=PkZNo7MFNFg)</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear' onClick={() => { setIntialStates(); window.location.reload(false); }} />\n                    </div>\n                </form>\n                <button className='type-button' onClick={() => { history.push('/'); setTodoSuccess(undefined); }} value='Home'>Home</button>\n\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport API from '../../utils/todoAPI';\nimport Axios from 'axios';\nimport UserContext from '../../context/UserContext';\nimport Card from '../layout/Card'\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function GetTodos() {\n    const { userData } = useContext(UserContext);\n    const [todoList, setTodoList] = useState([]);\n    const [error, setError] = useState();\n    // const [toggle, setToggle] = useEffect('');\n\n\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'gettodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    useEffect(() => {\n        API.getTodos(userData.token)\n            .then(res => {\n                console.log(res.data)\n\n                setTodoList(res.data)\n            })\n            .catch(err =>\n                (err.response.data.msg && setError(err.response.data.msg) && console.log(err))\n            )\n    }, [])\n\n    const getTodos = async () => {\n        try {\n            await API.getTodos(userData.token)\n                .then(res =>{\n                    setTodoList(res.data)\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n                        })\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Get Todo's</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            id={todo._id}\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                            getTodos={getTodos}\n                        />\n\n                    ) : <p></p>}\n                </div>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport API from '../../utils/todoAPI';\nimport Card from '../layout/Card';\n\nexport default function SearchTodos() {\n    const [error, setError] = useState(undefined);\n    const [todoList, setTodoList] = useState([]);\n    const [todoSearch, setTodoSearch] = useState({\n        search: undefined\n    });\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'searchtodos')\n\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        console.log(todoSearch.search)\n        try {\n            e.preventDefault();\n            setError(undefined)\n\n            await API.searchTodos(todoSearch.search, userData.token)\n                .then(res => {\n                    if (res.data.length === 0) {\n                        (setError('No matches!  Do you need more to-do...?'))\n                    } else {\n\n                        setTodoList(res.data)\n                    }\n                })\n        } catch (err) {\n            console.log(err)\n            err.response.data.msg && setError('No matches!  Do you need more to-do...?');\n        }\n    }\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n\n                            (err.response.data.msg && setError(err.response.data.msg))\n\n                        })\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const getTodos = async () => {\n        try {\n            await API.getTodos(userData.token)\n                .then(res => {\n                    setTodoList(res.data)\n                })\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n\n        <div className='page'>\n            <div className='container'>\n\n                <h2>Search Todos</h2>\n\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='search-term'>Search:</label>\n                    <input\n                        id='todo-search'\n                        type='text'\n                        placeholder='Search your todos'\n                        onChange={e => setTodoSearch({ search: e.target.value })}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Clear'\n                        // onClick={() => { setIntialStates();  window.location.reload(false); }}\n                        />\n                    </div>\n                </form>\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            id={todo._id}\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                            getTodos={getTodos}\n                        />\n\n                    ) :\n                        <p></p>\n\n                    }\n                </div>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\n// import SuccessContext from './context/SuccessContext';\nimport Axios from 'axios';\n\nimport Header from './components/layout/Header'\nimport Home from './components/pages/Home.js';\nimport Login from './components/auth/Login.js';\nimport Register from './components/auth/Register.js';\nimport CreateTodos from './components/todo/CreateTodos';\nimport GetTodos from './components/todo/GetTodos';\nimport SearchTodos from './components/todo/SearchTodo';\n\nimport './App.css';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  })\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '');\n        token = '';\n        return;\n      }\n\n      const tokenRes = await Axios.post(\n        '/api/users/tokenIsValid',\n        null,\n        { headers: { 'x-auth-token': token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get('/api/users/', {\n          headers: { 'x-auth-token': token }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        })\n      }\n    };\n    checkLoggedIn();\n  }, [])\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          {/* <SuccessContext.Provider value={{ todoSuccess, setTodoSuccess }}> */}\n            <Header />\n            {/* <div className='page'> */}\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/login' component={Login} />\n              <Route path='/register' component={Register} />\n              <Route path='/createtodos' component={CreateTodos} />\n              <Route path='/gettodos' component={GetTodos} />\n              <Route path='/searchtodos' component={SearchTodos} />\n            </Switch>\n            {/* </div> */}\n          {/* </SuccessContext.Provider> */}\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}