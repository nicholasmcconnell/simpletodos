{"version":3,"sources":["context/UserContext.js","components/auth/AuthOptions.js","components/layout/Header.js","components/misc/ErrorNotice.js","components/todo/TodoOptions.js","components/pages/Home.js","components/auth/Login.js","components/auth/Register.js","utils/todoAPI.js","components/misc/SuccessNotice.js","components/layout/Card.js","components/todo/CreateTodos.js","components/todo/GetTodos.js","components/todo/SearchTodo.js","App.js","serviceWorker.js","index.js"],"names":["createContext","AuthOptions","useContext","UserContext","userData","setUserData","history","useHistory","className","user","onClick","token","undefined","localStorage","setItem","push","Header","id","to","displayName","ErrorNotice","props","message","clearError","TodoOptions","useState","useEffect","value","Home","Login","email","setEmail","password","setPassword","error","setError","lastVisited","getItem","submit","e","a","preventDefault","loginUser","Axios","post","loginRes","data","response","msg","onSubmit","htmlFor","type","onChange","target","Register","passwordCheck","setpasswordCheckl","setDisplayName","newUser","placeholder","console","log","axios","get","headers","delete","newTodo","title","youTubeUrl","description","SuccessNotice","clearSuccess","Card","youTubeId","todoList","split","style","position","paddingBottom","paddingTop","height","top","left","width","src","frameBorder","deleteTodos","_id","CreateTodos","setTitle","setYouTubeUrl","setDescription","todoSuccess","setTodoSuccess","API","then","res","catch","err","name","GetTodos","setTodoList","length","map","todo","key","SearchTodos","setTodoSearch","App","userRes","checkLoggedIn","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1adcf89.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);","import React, { useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext'\n\nexport default function AuthOptions() {\n    const { userData, setUserData } = useContext(UserContext);\n\n    const history = useHistory();\n\n    const register = () => history.push('/register');\n    const login = () => history.push('/login');\n    const logout = () => {\n        setUserData({\n            token: undefined,\n            user: undefined\n        });\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '')\n        history.push('/login');\n\n    }\n\n    return (\n        <nav className='auth-options'>\n            {userData.user ? (<button onClick={logout}>Log out</button>) : (\n            <>\n                <button onClick={register}>Register</button>\n                <button onClick={login}>Log in</button>\n\n            </>\n            )}\n        </nav>\n    )\n}\n","import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport AuthOptions from '../auth/AuthOptions';\n\nexport default function Header() {\n    const { userData } = useContext(UserContext);\n\n    return (\n        <header id='header'>\n            <Link to='/'>\n            {\n                userData.user ? <h1 className='title'>{userData.user.displayName}'s Todo's!</h1> : <h1 className='title'>Simple Todo's</h1>\n            }\n            </Link>\n\n            <AuthOptions />\n\n        </header>\n    )\n}\n","import React from 'react'\n\nexport default function ErrorNotice(props) {\n    return (\n        <div className='error-notice'>\n            <span>{props.message}</span>\n            <button onClick={props.clearError}>X</button>\n        </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\n// import CreateTodos from './CreateTodos';\n// import GetTodos from './GetTodos';\n// import SearchTodos from './SearchTodo';\n\nexport default function TodoOptions() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    // const createtodos = () => history.push('/createtodos');\n    // const gettodos = () => history.push('/gettodos');\n    // const searchtodos = () => history.push('/searchtodos');\n\n    // const submit = async (e) => {\n    //     try {\n    //         e.preventDefault();\n\n    //     } catch (err) {\n    //         err.response.data.msg && setError(err.response.data.msg);\n    //     }\n\n    // }\n    return (\n        <>\n\n            <div className='page'>\n                <div className='container'>\n                    <h2>Todo Options</h2>\n                    <Link to='/gettodos'>\n                        <button className='type-button' value='GetTodos'>Get Todo's</button>\n                    </Link>\n                    <Link to='/searchtodos'>\n                        <button className='type-button' value='SearchTodos'>Search Todo's</button>\n                    </Link>\n\n                    <Link to='/createtodos'>\n                        <button className='type-button' value='CreateTodos'>Create Todo</button>\n                    </Link>\n                </div>\n            </div>\n        </>\n    )\n}","import React, { useEffect, useContext } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory } from 'react-router-dom';\nimport TodoOptions from '../todo/TodoOptions';\n\nfunction Home() {\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n     \n        localStorage.setItem('lastVisited', '');\n\n        if (!userData.user) {\n            history.push('/login')\n        }\n\n    });\n    return (\n        <>\n            <TodoOptions />\n        </>\n    )\n}\n\nexport default Home\n\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Login() {\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [error, setError] = useState();\n\n    const { userData, setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    useEffect(() => {\n        const lastVisited = localStorage.getItem('lastVisited')\n        if (userData.user) {\n            history.push(lastVisited)\n        }\n    });\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const loginUser = { email, password };\n            const loginRes = await Axios.post(\n                '/api/users/login',\n                loginUser\n            );\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            (err.response.data.msg && setError(err.response.data.msg))\n        }\n\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Login</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='login-email'>Email</label>\n                    <input\n                        id='login-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='login-password'>Password</label>\n                    <input\n                        id='login-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n\n                    <input type='submit' value='Log in' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useContext } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport Axios from 'axios';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function Register() {\n\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const [passwordCheck, setpasswordCheckl] = useState();\n    const [displayName, setDisplayName] = useState();\n    const [error, setError] = useState();\n\n    const { setUserData } = useContext(UserContext);\n    const history = useHistory();\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newUser = { email, password, passwordCheck, displayName };\n            await Axios.post(\n                '/api/users/register',\n                newUser\n            );\n            const loginRes = await Axios.post('/api/users/login', {\n                email,\n                password\n            });\n\n            setUserData({\n                token: loginRes.data.token,\n                user: loginRes.data.user\n            });\n\n            localStorage.setItem('auth-token', loginRes.data.token);\n            history.push('/');\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Register</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='register-email'>Email</label>\n                    <input\n                        id='register-email'\n                        type='email'\n                        onChange={e => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='register-password'>Password</label>\n                    <input\n                        id='register-password'\n                        type='password'\n                        onChange={e => setPassword(e.target.value)}\n                    />\n                    <input\n                        type='password'\n                        placeholder='Verify password'\n                        onChange={e => setpasswordCheckl(e.target.value)}\n                    />\n\n                    <label htmlFor='register-display-name'>Display name</label>\n                    <input\n                        id='register-display-name'\n                        type='text'\n                        onChange={e => setDisplayName(e.target.value)}\n                    />\n\n                    <input type='submit' value='Register' />\n\n                </form>\n            </div>\n        </div>\n    )\n}\n","// import { useContext } from 'react';\nimport axios from 'axios';\n// import UserContext from '../../context/UserContext';\n\n// const { userData } = \n\nexport default {\n    getTodos: function (token) {\n        \n        console.log('gettodos api')\n        return axios.get('api/todos/all', {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    deleteTodos: function (token, id){\n        console.log('delete api')\n        return axios.delete('/api/todos/' + id, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    },\n    createTodos: function (newTodo, token){\n        const { title, youTubeUrl, description } = newTodo;\n        return axios.post('/api/todos/', { title, youTubeUrl, description }, {\n            headers: {\n                'x-auth-token': token\n            }\n        })\n    }\n}\n\n","import React from 'react'\n\nexport default function SuccessNotice(props) {\n    return (\n        <div>\n            <div className='success-notice'>\n                <span>{props.message}</span>\n                <button onClick={props.clearSuccess}>X</button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\n{ }\nexport default function Card(props) {\n\n    const youTubeURL = props.todoList.youTubeUrl;\n    const youTubeId = youTubeURL.split('=')[1];\n    // const url = \"https://www.youtube.com/embed/\" + youTubeId;\n    // console.log(url);\n\n    // const youTubeId = 'hPq0fguAPBs';\n    return (\n        <div className='card-body'>\n            <h3 className='card-title'>{props.todoList.title}</h3>\n            <p className='card-description'>{props.todoList.description}</p>\n            <div\n                className=\"video\"\n                style={{\n                    position: \"relative\",\n                    paddingBottom: \"56.25%\" /* 16:9 */,\n                    paddingTop: 25,\n                    height: 0\n                }}\n            >\n                <iframe\n                    style={{\n                        position: \"absolute\",\n                        top: 0,\n                        left: 0,\n                        width: \"100%\",\n                        height: \"100%\"\n                    }}\n                    src={`https://www.youtube.com/embed/${youTubeId}`}\n                    frameBorder=\"0\"\n                />\n            </div>\n\n\n            <div className='buttons-div'>\n                <button className='todo-card-button'>Edit</button>\n                <button className='todo-card-button' onClick={() => props.deleteTodos(props.todoList._id)}>Delete</button>\n            </div>\n        </div >\n    )\n}\n","import React, { useState, useContext, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport UserContext from '../../context/UserContext';\nimport API from '../../utils/todoAPI';\nimport ErrorNotice from '../misc/ErrorNotice';\nimport SuccessNotice from '../misc/SuccessNotice';\nimport Card from '../../components/layout/Card';\n\nexport default function CreateTodos() {\n\n    const [title, setTitle] = useState('');\n    const [youTubeUrl, setYouTubeUrl] = useState();\n    const [description, setDescription] = useState();\n    const [error, setError] = useState();\n    const [todoSuccess, setTodoSuccess] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'createtodos');\n\n    console.log('userdata', userData)\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    }, []);\n\n    const submit = async (e) => {\n        e.preventDefault();\n        try {\n            const newTodo = { title, youTubeUrl, description }\n\n            await API.createTodos(newTodo, userData.token)\n                .then(res => setTodoSuccess(`Success, ${userData.user.displayName}!  Your Todo has been saved.`))\n                // .then API.get\n                .catch(err =>\n                    (err.response.data.msg && setError(err.response.data.msg))\n                )\n\n        } catch (err) {\n            console.log(\"something when wrong\")\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>CreateTodos</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n\n                {todoSuccess && (\n                    <SuccessNotice message={todoSuccess} clearSuccess={() => {\n                        setTodoSuccess(undefined);\n                        setTitle('');\n                    }\n                    } />\n                )}\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='todo-title'>Title</label>\n                    <input\n                        id='todo-title'\n                        type='text'\n                        onChange={e => setTitle(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-youtubeurl'>YouTube Desktop Application URL</label>\n                    <input\n                        id='todo-youtubeurl'\n                        type='url'\n                        onChange={e => setYouTubeUrl(e.target.value)}\n                    />\n\n                    <label htmlFor='todo-description'>Description</label>\n                    <textarea\n                        id='todo-description'\n                        name='todo-description'\n                        onChange={e => setDescription(e.target.value)}\n                    />\n                    <div className='buttons-div'>\n                        <input type='submit' value='Submit' />\n                        <input type='reset' value='Reset' />\n                    </div>\n                </form>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n\n                {/* <Card /> */}\n            </div>\n        </div>\n    )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { useHistory, Link } from 'react-router-dom';\nimport API from '../../utils/todoAPI';\nimport Axios from 'axios';\nimport UserContext from '../../context/UserContext';\nimport Card from '../layout/Card'\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function GetTodos() {\n    const { userData } = useContext(UserContext);\n    const [todoList, setTodoList] = useState([]);\n    const [error, setError] = useState();\n\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'gettodos');\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    useEffect(() => {\n        console.log('useEffect get todos.')\n        API.getTodos(userData.token)\n            .then(res =>\n                setTodoList(res.data)\n            )\n            .catch(err =>\n                (err.response.data.msg && setError(err.response.data.msg))\n            )\n    }, [])\n\n    // const getTodos = async () => {\n    //     try {\n    //         await API.getTodos(userData.token)\n    //             .then(res =>\n    //                 setTodoList(res.data)\n    //             )\n    //             .catch(err =>\n    //                 // console.log(err.response.data.msg)\n    //                 console.log('gettodos function', err)\n    //                     (err.response.data.msg && setError(err.response.data.msg))\n    //             )\n    //     } catch (err) {\n    //         console.log('gettodos.js catch', err)\n    //     }\n    // }\n\n\n    const deleteTodos = async (id) => {\n        try {\n            await API.deleteTodos(userData.token, id)\n                .then(async () => {\n                    await API.getTodos(userData.token)\n                        .then(res => {\n                            setTodoList(res.data)\n                        })\n                        .catch(err => {\n                            if (todoList.length >= 1) {\n                                setTodoList([]);\n                                (err.response.data.msg && setError(err.response.data.msg))\n                            }\n                        })\n                })\n                .catch(err =>\n                        (err.response.data.msg && setError(err.response.data.msg))\n                )\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return (\n        <div className='page'>\n            <div className='container'>\n                <h2>Get Todo's</h2>\n                {error && (\n                    <ErrorNotice message={error} clearError={() => setError(undefined)} />\n                )}\n                {/* <button className='type-button' value='GetTodos' onClick={getTodos}>Fetch Todos</button> */}\n\n\n                <div className='card-container'>\n                    {todoList.length ? todoList.map(todo =>\n                        <Card\n                            todoList={todo}\n                            key={todo._id}\n                            deleteTodos={deleteTodos}\n                        />\n\n                    ) : <p></p>}\n                </div>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport UserContext from '../../context/UserContext';\nimport { useHistory, Link } from 'react-router-dom';\nimport ErrorNotice from '../misc/ErrorNotice';\n\nexport default function SearchTodos() {\n    const [error, setError] = useState();\n    const [todoSearch, setTodoSearch] = useState();\n\n    const { userData } = useContext(UserContext);\n    const history = useHistory();\n\n    localStorage.setItem('lastVisited', 'searchtodos')\n\n\n    useEffect(() => {\n        if (!userData.user) {\n            history.push('/login')\n        }\n    });\n\n    const submit = async (e) => {\n        try {\n            e.preventDefault();\n\n        } catch (err) {\n            err.response.data.msg && setError(err.response.data.msg);\n        }\n\n    }\n    return (\n\n        <div className='page'>\n            <div className='container'>\n\n                <h2>Search Todos</h2>\n\n                <form className='form' onSubmit={submit}>\n                    <label htmlFor='search-term'>Search:</label>\n                    <input\n                        id='todo-search'\n                        type='text'\n                        placeholder='Search your todos'\n                        onChange={e => setTodoSearch(e.target.value)}\n                    />\n\n                    <input type='submit' value='Search' />\n                </form>\n                <Link to='/'>\n                    <button className='type-button' value='Home'>Home</button>\n                </Link>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, useHistory } from 'react-router-dom';\nimport UserContext from './context/UserContext';\nimport Axios from 'axios';\n\nimport Header from './components/layout/Header'\nimport Home from './components/pages/Home.js';\nimport Login from './components/auth/Login.js';\nimport Register from './components/auth/Register.js';\nimport CreateTodos from './components/todo/CreateTodos';\nimport GetTodos from './components/todo/GetTodos';\nimport SearchTodos from './components/todo/SearchTodo';\n\nimport './App.css';\n\nfunction App() {\n  const [userData, setUserData] = useState({\n    token: undefined,\n    user: undefined\n  })\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem('lastVisited', '');\n        localStorage.setItem('auth-token', '');\n        token = '';\n        return;\n      }\n\n      const tokenRes = await Axios.post(\n        '/api/users/tokenIsValid',\n        null,\n        { headers: { 'x-auth-token': token } }\n      );\n      if (tokenRes.data) {\n        const userRes = await Axios.get('/api/users/', {\n          headers: { 'x-auth-token': token }\n        });\n        setUserData({\n          token,\n          user: userRes.data\n        })\n      }\n    };\n    checkLoggedIn();\n  }, [])\n\n  return (\n    <>\n      <BrowserRouter>\n        <UserContext.Provider value={{ userData, setUserData }}>\n          <Header />\n          {/* <div className='page'> */}\n            <Switch>\n              <Route exact path='/' component={Home}  />\n              <Route path='/login' component={Login} />\n              <Route path='/register' component={Register} />\n              <Route path='/createtodos' component={CreateTodos} />\n              <Route path='/gettodos' component={GetTodos} />\n              <Route path='/searchtodos' component={SearchTodos} />\n            </Switch>\n          {/* </div> */}\n        </UserContext.Provider>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}